// Code generated by cfgx. DO NOT EDIT.

package config

import "time"

type AppConfig struct {
	Logging AppLoggingConfig
	Name    string
	Version string
}

type AppLoggingConfig struct {
	File     string
	Format   string
	Level    string
	Rotation AppLoggingRotationConfig
}

type AppLoggingRotationConfig struct {
	Compress bool
	MaxAge   int64
	MaxSize  int64
}

type CacheConfig struct {
	Enabled    bool
	MaxEntries int64
	Outputs    []string
	Redis      CacheRedisConfig
	Ttl        time.Duration
}

type CacheRedisConfig struct {
	Addr     string
	Db       int64
	Password string
}

type DatabaseConfig struct {
	ConnMaxLifetime time.Duration
	Dsn             string
	MaxIdleConns    int64
	MaxOpenConns    int64
	Pool            DatabasePoolConfig
}

type DatabasePoolConfig struct {
	Enabled bool
	MaxSize int64
	MinSize int64
}

type EndpointsItem struct {
	Methods   []string
	Path      string
	RateLimit int64
}

type FeaturesItem struct {
	Enabled  bool
	Name     string
	Priority int64
}

type ServerConfig struct {
	Addr            string
	Cert            []byte
	Debug           bool
	IdleTimeout     time.Duration
	MaxHeaderBytes  int64
	ReadTimeout     time.Duration
	ShutdownTimeout time.Duration
	Timeout         time.Duration
	WriteTimeout    time.Duration
}

type ServiceConfig struct {
	AllowedOrigins []string
	Features       []string
	Name           string
	Ports          []int64
	Weights        []float64
}

var (
	App = AppConfig{
		Logging: AppLoggingConfig{
			File:   "/var/log/app.log",
			Format: "json",
			Level:  "info",
			Rotation: AppLoggingRotationConfig{
				Compress: true,
				MaxAge:   30,
				MaxSize:  100,
			},
		},
		Name:    "myservice",
		Version: "1.0.0",
	}
	Cache = CacheConfig{
		Enabled:    true,
		MaxEntries: 10000,
		Outputs:    []string{"stdout", "file"},
		Redis: CacheRedisConfig{
			Addr:     "localhost:6379",
			Db:       0,
			Password: "",
		},
		Ttl: 1 * time.Hour,
	}
	Database = DatabaseConfig{
		ConnMaxLifetime: 5 * time.Minute,
		Dsn:             "postgres://localhost/myapp",
		MaxIdleConns:    5,
		MaxOpenConns:    25,
		Pool: DatabasePoolConfig{
			Enabled: true,
			MaxSize: 10,
			MinSize: 2,
		},
	}
	Endpoints = []EndpointsItem{
		{
			Methods:   []string{"GET", "POST"},
			Path:      "/api/v1",
			RateLimit: 100,
		},
		{
			Methods:   []string{"GET", "POST", "PUT", "DELETE"},
			Path:      "/api/v2",
			RateLimit: 200,
		},
	}
	Features = []FeaturesItem{
		{
			Enabled:  true,
			Name:     "authentication",
			Priority: 1,
		},
		{
			Enabled:  true,
			Name:     "rate_limiting",
			Priority: 2,
		},
		{
			Enabled:  false,
			Name:     "caching",
			Priority: 3,
		},
	}
	Name   string = "cfgx"
	Server        = ServerConfig{
		Addr: ":8080",
		Cert: []byte{
			0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43,
			0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d,
			0x2d, 0x2d, 0x2d, 0x0a, 0x4d, 0x49, 0x49, 0x44, 0x58, 0x54, 0x43, 0x43,
			0x41, 0x6b, 0x57, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x4a,
			0x41, 0x4b, 0x4c, 0x30, 0x55, 0x47, 0x2b, 0x6d, 0x52, 0x4b, 0x53, 0x7a,
			0x4d, 0x41, 0x30, 0x47, 0x43, 0x53, 0x71, 0x47, 0x53, 0x49, 0x62, 0x33,
			0x44, 0x51, 0x45, 0x42, 0x43, 0x77, 0x55, 0x41, 0x4d, 0x45, 0x55, 0x78,
			0x43, 0x7a, 0x41, 0x4a, 0x42, 0x67, 0x4e, 0x56, 0x0a, 0x42, 0x41, 0x59,
			0x54, 0x41, 0x6b, 0x46, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59,
			0x44, 0x56, 0x51, 0x51, 0x49, 0x44, 0x41, 0x70, 0x54, 0x62, 0x32, 0x31,
			0x6c, 0x4c, 0x56, 0x4e, 0x30, 0x59, 0x58, 0x52, 0x6c, 0x4d, 0x53, 0x45,
			0x77, 0x48, 0x77, 0x59, 0x44, 0x56, 0x51, 0x51, 0x4b, 0x44, 0x42, 0x68,
			0x4a, 0x62, 0x6e, 0x52, 0x6c, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x43, 0x42,
			0x58, 0x0a, 0x61, 0x57, 0x52, 0x6e, 0x61, 0x58, 0x52, 0x7a, 0x49, 0x46,
			0x42, 0x30, 0x65, 0x53, 0x42, 0x4d, 0x64, 0x47, 0x51, 0x77, 0x48, 0x68,
			0x63, 0x4e, 0x4d, 0x54, 0x63, 0x77, 0x4f, 0x44, 0x49, 0x7a, 0x4d, 0x54,
			0x55, 0x78, 0x4e, 0x54, 0x45, 0x79, 0x57, 0x68, 0x63, 0x4e, 0x4d, 0x6a,
			0x63, 0x77, 0x4f, 0x44, 0x49, 0x78, 0x4d, 0x54, 0x55, 0x78, 0x4e, 0x54,
			0x45, 0x79, 0x57, 0x6a, 0x42, 0x46, 0x0a, 0x4d, 0x51, 0x73, 0x77, 0x43,
			0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x47, 0x45, 0x77, 0x4a, 0x42, 0x56,
			0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0x43,
			0x41, 0x77, 0x4b, 0x55, 0x32, 0x39, 0x74, 0x5a, 0x53, 0x31, 0x54, 0x64,
			0x47, 0x46, 0x30, 0x5a, 0x54, 0x45, 0x68, 0x4d, 0x42, 0x38, 0x47, 0x41,
			0x31, 0x55, 0x45, 0x43, 0x67, 0x77, 0x59, 0x53, 0x57, 0x35, 0x30, 0x0a,
			0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x51, 0x67, 0x56, 0x32, 0x6c, 0x6b,
			0x5a, 0x32, 0x6c, 0x30, 0x63, 0x79, 0x42, 0x51, 0x64, 0x48, 0x6b, 0x67,
			0x54, 0x48, 0x52, 0x6b, 0x4d, 0x49, 0x49, 0x42, 0x49, 0x6a, 0x41, 0x4e,
			0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42,
			0x41, 0x51, 0x45, 0x46, 0x41, 0x41, 0x4f, 0x43, 0x41, 0x51, 0x38, 0x41,
			0x4d, 0x49, 0x49, 0x42, 0x0a, 0x43, 0x67, 0x4b, 0x43, 0x41, 0x51, 0x45,
			0x41, 0x7a, 0x50, 0x4a, 0x6e, 0x36, 0x4e, 0x43, 0x4d, 0x6d, 0x4e, 0x47,
			0x70, 0x52, 0x68, 0x5a, 0x4b, 0x57, 0x58, 0x41, 0x36, 0x64, 0x47, 0x7a,
			0x70, 0x46, 0x33, 0x42, 0x4f, 0x38, 0x63, 0x47, 0x31, 0x59, 0x54, 0x2f,
			0x63, 0x53, 0x4c, 0x55, 0x4a, 0x75, 0x50, 0x4b, 0x69, 0x56, 0x6d, 0x48,
			0x59, 0x78, 0x59, 0x51, 0x7a, 0x38, 0x78, 0x51, 0x57, 0x0a, 0x2d, 0x2d,
			0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49,
			0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x0a,
		},
		Debug:           true,
		IdleTimeout:     5 * time.Minute,
		MaxHeaderBytes:  1048576,
		ReadTimeout:     15 * time.Second,
		ShutdownTimeout: 2*time.Hour + 30*time.Minute,
		Timeout:         30 * time.Second,
		WriteTimeout:    15 * time.Second,
	}
	Service = ServiceConfig{
		AllowedOrigins: []string{"https://example.com", "https://app.example.com"},
		Features:       []string{"auth", "cache", "metrics"},
		Name:           "api",
		Ports:          []int64{8080, 8081, 8082},
		Weights:        []float64{1, 2.5, 3.7},
	}
)
